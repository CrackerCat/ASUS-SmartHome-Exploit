#!/usr/bin/env python3
import argparse
from SmartHomeExploit import SmartHomeExploit

DEBUG = True

class Main():
    def __init__(self):
        self.setArgs()
        self.main()

    def setArgs(self):
        parser = argparse.ArgumentParser()
        subparsers = parser.add_subparsers(dest="operator", required=True)

        parser_scan = subparsers.add_parser('scan', help='scan help', description="scan exploitable port")
        parser_scan.add_argument("target", help="scan ip", metavar="target_ip")
        parser_scan.add_argument("-v", help="show account email list", action="store_true")

        parser_cmd = subparsers.add_parser('cmd', help='cmd help', description="send command to target")
        parser_cmd.add_argument("target", help="<target-ip>:<port>", metavar="target")
        cmdgroup = parser_cmd.add_mutually_exclusive_group(required=True)
        cmdgroup.add_argument("-a","--add-user", help="add a user to device", metavar="username")
        cmdgroup.add_argument("-u","--list-user", help="list all user in device", action="store_true")
        cmdgroup.add_argument("-l","--list-device", help="list all device status", action="store_true")
        cmdgroup.add_argument("-s","--device-status", help="list device status", type=int, metavar="device_id")
        cmdgroup.add_argument("-c","--device-control", help="control device status", nargs=2, metavar=("device_id","status"))

        self.args = parser.parse_args()

    def main(self):
        if DEBUG: print(self.args)
        if self.args.operator == "scan":
            result = SmartHomeExploit.scanVulPort(self.args.target,self.args.v)
            if result>0:
                print("[*] \"%s:%s\" is exploitable." % (self.args.target, result))
            else:
                print("[*] \"%s\" is not exploitable." % self.args.target)
        elif self.args.operator == "cmd":
            if self.args.add_user:
                print("adduser :%s" % self.args.add_user)
            elif self.args.list_user:
                print("listuser")
            elif self.args.list_device:
                print("listdevice")
            elif self.args.device_status:
                print("device status :%s" % self.args.device_status)
            elif self.args.device_control:
                print("device_control %s "% self.args.device_control)

        else:
            print("invalid operator")
            exit(1)

if __name__ == "__main__":
    if DEBUG:
        m = Main()
    else:
        Main()
